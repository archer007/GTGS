var DEBUG = 0; // Global debug variable
var google_spreadsheet_id = "";
var notification_email_address = "";
var email_no_reply_list =["","",""];
var no_issue_sentinel_word = "#noissue";

/* Thhe following var can't go over a certain number defined by Google. Unless you're dealing 
// with over 100 emails/minute, leave it at 100. Scaling may become an issue at large traffic sizes.
*/
var inbox_search_depth = 100; 
var label_sentinel_value = "Ticket Created";
var label_sentinel_object;
var spreadsheet = SpreadsheetApp.openById(google_spreadsheet_id);
var active_sheet = spreadsheet.setActiveSheet(spreadsheet.getSheets()[0]); // Select the first sheet as the active sheet

function readMail() {
  
  var email_no_reply_list =["","",""];
  // /*
  // Loop through all or a certain amount of email threads in the Gmail inbox. This loops through threads
  // */
  var threads = GmailApp.getInboxThreads(0, inbox_search_depth);
  for (var i = 0; i < threads.length; i++) {
    var add_thread_to_spreadsheet = true; // Assume we are going to add every thread we come across to the spreadsheet
    
    // DEBUG CODE ***** //
    if (DEBUG == 1) {
      Logger.log(threads[i].getFirstMessageSubject());
    
      if (threads[i].isUnread) {
        Logger.log("THREAD " + i + " IS MARKED UNREAD!");
      }
    }
    // END DEBUG CODE ***** //

    
    var messages = GmailApp.getMessagesForThread(threads[i]);
    
    // /*
    // Now loop through all messages in a thread. This is too granular for some thread-based 
    // operations, and is also unoptimized.
    // */
    for (var x = 0 ; x < messages.length; x++) {
      
      if (DEBUG == 1 && messages[x].isUnread) {
        Logger.log("subject: " + messages[x].getSubject());
      }
      
      if (x == 0) {
        
        // DEBUG CODE ********* //
        if (DEBUG == 1){
        Logger.log("Issue BODY text: " + messages[x].getBody());
        }
        // END DEBUG CODE ***** //
        
        // if the message is NOT starred
        if (!messages[x].isStarred() ) {
          
          messages[x].star();
          
          var email_matches_no_reply_list = false;
            for (var z = 0; z < email_no_reply_list.length; z++) {
              if (!messages[x].getFrom().match(email_no_reply_list[z]) ) {
                
              }
              else {  
                email_matches_no_reply_list = true;
              }
          
          if (!messages[x].getBody().match("#noissue") && (!email_matches_no_reply_list) && z==0 ) {
            
            active_sheet.appendRow([messages[x].getDate(), messages[x].getFrom(), 
                                  messages[x].getBody().replace(/<(?:.|\n)*?>/gm, '').replace(/(\r\n|\n|\r)/gm," ")]);
          
            GmailApp.sendEmail(notification_email_address, "Issue Received", "Issue has been logged at https://docs.google.com/spreadsheet/ccc?key=" 
                             + google_spreadsheet_id + "#gid=0");
              
            }
            
            
          }
        }
        
      }
      
    }
  }
}
